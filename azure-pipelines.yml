# Only test the minimum supported Python version for each major version. i.e
# test python=3.7 until summer 2023 and test python=4.0 if released. python=2
# is not supported.

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - 'docs/'
    - '/.*'
    - '/*.rst'
    - '/*.md'
    - '.travis.yml'

jobs:

- job: CUDA_Linux
  pool:
    name: Default
    demands:
    - CUDA_VERSION
    - Agent.OS -equals Linux
  strategy:
    matrix:
      Python37:
        python.version: '37'
    maxParallel: 4
  steps:
  - script: echo "CUDA version is $(CUDA_VERSION)"
    displayName: Print CUDA version
  - script: >
      conda update --yes --quiet
      -n base conda
    displayName: Update conda
  - script: >
      conda env remove --yes
      -n tomopy
    displayName: Remove existing build environment
  - script: >
      conda env create --quiet --force
      -n tomopy
      -f envs/linux-$(python.version).yml
    displayName: Create build environment
  - script: conda list -n tomopy
    displayName: List build environment
  - script: |
      source activate tomopy
      pip install . --no-deps
      cmake -S . -B build -GNinja -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=Release
      cmake --build build
      cmake --install build
    displayName: Setup and install
  - script: |
      source activate tomopy
      export CUDA_VERSION="$(CUDA_VERSION)"
      pytest test -v
    displayName: Run tests

- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python-nomkl:
        python.version: 'nomkl'
    maxParallel: 4
  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
  - script: |
      conda env create -n tomopy --quiet -f envs/linux-$(python.version).yml
    displayName: Create build environment
  - script: conda list -n tomopy
    displayName: List build environment
  - script: |
      source activate tomopy
      pip install . --no-deps
      cmake -S . -B build -GNinja -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=Release
      cmake --build build
      cmake --install build
    displayName: Setup and install
  - script: |
      source activate tomopy
      pytest test -v
    displayName: Run tests

- job: macOS
  pool:
    vmImage: 'macOS-latest'
  strategy:
    matrix:
      Python37:
        python.version: '37'
    maxParallel: 4
  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
  - bash: sudo chown -R $USER $CONDA
    displayName: Take ownership of conda installation
  - script: |
      conda env create -n tomopy --quiet -f envs/osx-$(python.version).yml
    displayName: Create build environment
  - script: conda list -n tomopy
    displayName: List build environment
  - script: |
      source activate tomopy
      pip install . --no-deps
      cmake -S . -B build -GNinja -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=Release
      cmake --build build
      cmake --install build
    displayName: Setup and install
  - script: |
      source activate tomopy
      pytest test -v
    displayName: Run tests

- job: Windows
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python37:
        python.version: '37'
    maxParallel: 4
  steps:
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH
  - script: |
      conda env create -n tomopy --quiet -f envs/win-$(python.version).yml
    displayName: Create build environment
  - script: conda list -n tomopy
    displayName: List build environment
  - script: |
      call activate tomopy
      pip install . --no-deps
      cmake -S . -B build -GNinja -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%\Library -DTOMOPY_USE_OPENCV=ON -DCMAKE_BUILD_TYPE=Release
      cmake --build build
      cmake --install build
    displayName: Setup and install
  - script: |
      call activate tomopy
      coverage run --source tomopy -m pytest test -v
    displayName: Run tests
  - script: |
      call activate tomopy
      coverage report -m
    displayName: Report coverage
